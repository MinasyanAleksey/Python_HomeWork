# ----- ЗАДАЧА 1 -----
# Создайте программу для игры с конфетами человек против человека. Можно юзать библиотекe re.
# Условие задачи: На столе лежит 2021 конфета. Играют два игрока делая ход друг после друга. Первый ход определяется жеребьёвкой. 
# За один ход можно забрать не более чем 28 конфет. Все конфеты оппонента достаются сделавшему последний ход. 
# Сколько конфет нужно взять первому игроку, чтобы забрать все конфеты у своего конкурента?

from random import *

print('На столе лежит 2021 конфета. Два игрока по очереди берут из этой "кучки".')
print('За один ход можно забрать не более чем 28 конфет.')
print('Первый ход определяется жеребьёвкой. Выигрывает тот, кто последним ходом заберет все конфеты.')
print()
player1 = input('Введите Имя Первого Игрока: ')
player2 = input('Введите Имя Второго Игрока: ')
print()

print('Жеребьевка')

x = randint(1, 2)
if x == 1:
    first = player1
    second = player2
else:
    first = player2
    second = player1
print(f'Поздравляю {first} - ты ходишь первым !')


all_sweets = 221
max_take = 28
count = 0

while all_sweets > 0:
    if count == 0:
        step = int(input(f'{first} - введите число конфет, которые хотите забрать (от 1 до 28): '))
        if step > max_take:
            step = int(input(f'{first} - слишком много! Можно взять не более {max_take}! Попробуй еще раз: '))
        all_sweets = all_sweets - step
    if all_sweets > 0:
        print(f'Осталось еще {all_sweets} конфет')
        count = 1
    else:
        print(f'Конфеты закончились...')
    
    if count == 1:
        step = int(input(f'{second} - введите число конфет, которые хотите забрать (от 1 до 28): '))
        if step > max_take:
            step = int(input(f'{second} - слишком много! Можно взять не более {max_take}! Попробуй еще раз: '))
        all_sweets = all_sweets - step
    if all_sweets > 0:
        print(f'Осталось еще {all_sweets} конфет')
        count = 0
    else:
        print(f'Всё, конфеты закончились...')

if count == 1:
    print(f'{second} ПОБЕДИЛ')
if count == 0:
    print(f'{first} ПОБЕДИЛ')